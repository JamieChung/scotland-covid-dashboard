{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport { Paper, LinearProgress } from \"@material-ui/core\";\nimport axios from 'axios';\nimport * as _ from 'lodash';\nimport { ResponsiveContainer, LineChart, Line, Legend, XAxis, YAxis, Tooltip, CartesianGrid } from 'recharts';\nimport moment from 'moment';\nimport seedColor from 'seed-color';\nvar query = \"\\nSELECT\\n  Area,\\n  AreaCode,\\n  CAST(COALESCE(TotalCases, 0) AS Integer) AS TotalCases,\\n  Date\\nFROM\\n  cases\\nWHERE\\n  Country = 'Scotland'\\nORDER BY\\n  Date ASC\";\n\nfunction createBaseWithDB(db) {\n  return 'https://covid-19-uk-datasette-65tzkjlxkq-ew.a.run.app/' + db + '.json';\n}\n\nvar baseURL = createBaseWithDB('covid-19-uk') + '?sql=' + encodeURIComponent(query);\n\nfunction formatDateLabel(label) {\n  // return new Date(label).getMonth () + '-' + new Date(label).getDay();\n  return moment(label).format('MMM-DD');\n}\n\nvar AreasCharts = /*#__PURE__*/function (_React$Component) {\n  _inherits(AreasCharts, _React$Component);\n\n  var _super = _createSuper(AreasCharts);\n\n  function AreasCharts() {\n    var _this;\n\n    _classCallCheck(this, AreasCharts);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      data: [],\n      loading: true\n    });\n\n    return _this;\n  }\n\n  _createClass(AreasCharts, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get(baseURL).then(function (response) {\n        var _build_data = []; // hyrate array of JSON object with rows based on the columns\n\n        _.map(response.data.rows, function (r) {\n          _build_data.push(_.mapKeys(r, function (v, k) {\n            return response.data.columns[k];\n          }));\n        });\n\n        _this2.setState({\n          data: _.groupBy(_build_data, 'Area'),\n          loading: false\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.loading) {\n        return __jsx(LinearProgress, null);\n      }\n\n      return __jsx(Paper, null, __jsx(ResponsiveContainer, {\n        width: \"100%\",\n        height: 500\n      }, __jsx(LineChart, null, _.map(this.state.data, function (data, k) {\n        return __jsx(Line, {\n          key: k,\n          dataKey: \"TotalCases\",\n          name: k,\n          data: data,\n          stroke: seedColor(k).toHex()\n        });\n      }), __jsx(Legend, null), __jsx(Tooltip, null), __jsx(CartesianGrid, {\n        strokeDasharray: \"5 5\"\n      }), __jsx(YAxis, {\n        label: {\n          value: 'Total Cases',\n          angle: -90,\n          position: 'insideLeft'\n        }\n      }), __jsx(XAxis, {\n        dataKey: \"Date\",\n        allowDuplicatedCategory: false,\n        tickFormatter: formatDateLabel\n      }))));\n    }\n  }]);\n\n  return AreasCharts;\n}(React.Component);\n\nexport { AreasCharts as default };","map":null,"metadata":{},"sourceType":"module"}