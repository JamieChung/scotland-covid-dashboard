{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Grid } from '@material-ui/core';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport React from 'react';\nimport * as queries from '../../utils/queries';\nimport AreasCharts from '../components/areasCharts';\nimport CountryCharts from '../components/countryCharts';\nimport SingleKPICard from '../components/singleKPICard';\nimport TopAreasTable from '../components/topAreasTable';\nimport TopCountriesTable from '../components/topCountriesTable';\n\nvar App = /*#__PURE__*/function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(Container, null, __jsx(Typography, {\n        variant: \"h4\"\n      }, \"Scotland COVID-19 Dashboard\"), __jsx(Typography, {\n        variant: \"overline\",\n        style: {\n          marginBottom: 25,\n          display: 'block'\n        }\n      }, \"Updated Daily - BST/GMT\"), __jsx(Grid, {\n        container: true,\n        spacing: 3\n      }, __jsx(Grid, {\n        item: true,\n        xs: 12,\n        md: 6\n      }, __jsx(SingleKPICard, {\n        title: \"Total number of confirmed cases in Scotland\",\n        query: queries.QUERY_TOTAL_CONFIRMED_CASES_SCOTLAND\n      })), __jsx(Grid, {\n        item: true,\n        xs: 12,\n        md: 6\n      }, __jsx(SingleKPICard, {\n        title: \"Latest daily number of confirmed cases in Scotland\",\n        query: queries.QUERY_DAILY_CHANGE_CONFIRMED_CASES_SCOTLAND\n      })), __jsx(Grid, {\n        item: true,\n        xs: 12,\n        md: 6\n      }, __jsx(SingleKPICard, {\n        title: \"Total number of tests in Scotland\",\n        query: queries.QUERY_TOTAL_TESTS_SCOTLAND\n      })), __jsx(Grid, {\n        item: true,\n        xs: 12,\n        md: 6\n      }, __jsx(SingleKPICard, {\n        title: \"Latest daily number of tests in Scotland\",\n        query: queries.QUERY_DAILY_CHANGE_TESTS_SCOTLAND\n      })), __jsx(Grid, {\n        item: true,\n        xs: 12,\n        md: 6\n      }, __jsx(SingleKPICard, {\n        title: \"Total number of deaths in Scotland\",\n        query: queries.QUERY_TOTAL_DEATHS_SCOTLAND\n      })), __jsx(Grid, {\n        item: true,\n        xs: 12,\n        md: 6\n      }, __jsx(SingleKPICard, {\n        title: \"Latest daily number of deaths in Scotland\",\n        query: queries.QUERY_DAILY_CHANGE_DEATHS_SCOTLAND\n      })), __jsx(Grid, {\n        item: true,\n        xs: 12\n      }, __jsx(CountryCharts, null)), __jsx(Grid, {\n        item: true,\n        xs: 12\n      }, __jsx(TopAreasTable, null)), __jsx(Grid, {\n        item: true,\n        xs: 12\n      }, __jsx(TopCountriesTable, null)), __jsx(Grid, {\n        item: true,\n        xs: 12\n      }, __jsx(AreasCharts, null))));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };","map":null,"metadata":{},"sourceType":"module"}