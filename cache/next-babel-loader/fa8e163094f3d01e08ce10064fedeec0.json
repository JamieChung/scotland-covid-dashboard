{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport { Paper, LinearProgress } from \"@material-ui/core\";\nimport axios from 'axios';\nimport * as _ from 'lodash';\nimport { ResponsiveContainer, LineChart, Line, Legend, XAxis, YAxis, Tooltip, CartesianGrid } from 'recharts';\nimport moment from 'moment';\nimport seedColor from 'seed-color';\nconst query = `\nSELECT\n  Area,\n  AreaCode,\n  CAST(COALESCE(TotalCases, 0) AS Integer) AS TotalCases,\n  Date\nFROM\n  cases\nWHERE\n  Country = 'Scotland'\nORDER BY\n  Date ASC`;\n\nfunction createBaseWithDB(db) {\n  return 'https://covid-19-uk-datasette-65tzkjlxkq-ew.a.run.app/' + db + '.json';\n}\n\nconst baseURL = createBaseWithDB('covid-19-uk') + '?sql=' + encodeURIComponent(query);\n\nfunction formatDateLabel(label) {\n  // return new Date(label).getMonth () + '-' + new Date(label).getDay();\n  return moment(label).format('MMM-DD');\n}\n\nexport default class AreasCharts extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      data: [],\n      loading: true\n    });\n  }\n\n  componentDidMount() {\n    axios.get(baseURL).then(response => {\n      let _build_data = []; // hyrate array of JSON object with rows based on the columns\n\n      _.map(response.data.rows, function (r) {\n        _build_data.push(_.mapKeys(r, function (v, k) {\n          return response.data.columns[k];\n        }));\n      });\n\n      this.setState({\n        data: _.groupBy(_build_data, 'Area'),\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    if (this.state.loading) {\n      return __jsx(LinearProgress, null);\n    }\n\n    return __jsx(Paper, null, __jsx(ResponsiveContainer, {\n      width: \"100%\",\n      height: 500\n    }, __jsx(LineChart, null, _.map(this.state.data, function (data, k) {\n      return __jsx(Line, {\n        key: k,\n        dataKey: \"TotalCases\",\n        name: k,\n        data: data,\n        stroke: seedColor(k).toHex()\n      });\n    }), __jsx(Legend, null), __jsx(Tooltip, null), __jsx(CartesianGrid, {\n      strokeDasharray: \"5 5\"\n    }), __jsx(YAxis, {\n      label: {\n        value: 'Total Cases',\n        angle: -90,\n        position: 'insideLeft'\n      }\n    }), __jsx(XAxis, {\n      dataKey: \"Date\",\n      allowDuplicatedCategory: false,\n      tickFormatter: formatDateLabel\n    }))));\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}