{"version":3,"file":"static/webpack/static/development/pages/index.js.a7ecdb27744776f51f63.hot-update.js","sources":["webpack:///./pages/components/topAreasTable.tsx"],"sourcesContent":["import React from \"react\";\nimport { TableContainer, Paper, Table, TableHead, TableRow, TableCell, TableBody, LinearProgress } from \"@material-ui/core\";\nimport axios from 'axios';\nimport * as _ from 'lodash';\nimport numeral from 'numeral';\n\nconst query = `\nSELECT\n  Area,\n  CAST(COALESCE(TotalCases, 0) AS Integer) AS TotalCases,\n  Date\nFROM\n  cases\nWHERE\n  Country = 'Scotland'\n  AND Date = (\n    SELECT\n      MAX(Date)\n    FROM\n      cases\n  )\nORDER BY\n  TotalCases DESC\n`;\n\nfunction createBaseWithDB(db: string): string {\n    return 'https://covid-19-uk-datasette-65tzkjlxkq-ew.a.run.app/' + db + '.json';\n}\n\nconst baseURL = createBaseWithDB('covid-19-uk') + '?sql=' + encodeURIComponent(query);\n\nexport default class TopAreasTable extends React.Component {\n\n    state = {\n        data: [],\n        loading: true\n    }\n\n    componentDidMount() {\n\n        axios.get(baseURL)\n            .then(response => {\n\n                let _build_data = [];\n                // hyrate array of JSON object with rows based on the columns\n                _.map(response.data.rows, function (r) {\n                    _build_data.push(_.mapKeys(r, function (v, k) {\n                        return response.data.columns[k];\n                    }))\n                });\n\n                this.setState({ data: _build_data });\n                this.setState({ loading: false });\n            })\n    }\n\n\n    render() {\n\n        if (this.state.loading) {\n            return <LinearProgress />\n        }\n\n        return (\n            <div><TableContainer component={Paper}>\n            <Table size=\"small\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Area</TableCell>\n                        <TableCell>Confirmed Cases</TableCell>\n                        <TableCell>Last Updated</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {this.state.data.map(row => <TableRow key={(row.Date + row.Area)}>\n                        <TableCell>{row.Area}</TableCell>\n                        <TableCell>{numeral(row.TotalCases).format('0,0')}</TableCell>\n                        <TableCell>{row.Date}</TableCell>\n                    </TableRow>)}\n                </TableBody>\n            </Table>\n        </TableContainer>\n\n\n    <ExpansionPanel>\n    <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n      <Typography>Areas #1</Typography>\n      <Typography>Descripton of Area #1</Typography>\n    </ExpansionPanelSummary>\n    <ExpansionPanelDetails>\n      <AreaExpansionPanelDetail area=\"Area #1\" />\n    </ExpansionPanelDetails>\n  </ExpansionPanel>\n  <ExpansionPanel>\n    <ExpansionPanelSummary>\n      <Typography>Areas #2</Typography>\n    </ExpansionPanelSummary>\n  </ExpansionPanel></div>\n        )\n    }\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAkBA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AAFA;AACA;;;;;;AAIA;AAAA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;;;AAGA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AApEA;AACA;;;;;A","sourceRoot":""}