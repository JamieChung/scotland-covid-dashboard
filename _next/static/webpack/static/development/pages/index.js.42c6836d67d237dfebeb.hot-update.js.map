{"version":3,"file":"static/webpack/static/development/pages/index.js.42c6836d67d237dfebeb.hot-update.js","sources":["webpack:///./pages/components/topCountriesTable.tsx"],"sourcesContent":["import { ExpansionPanel, ExpansionPanelDetails, ExpansionPanelSummary, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@material-ui/core';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport axios from 'axios';\nimport * as _ from 'lodash';\nimport numeral from 'numeral';\nimport React from 'react';\n\n\nlet query = `\nwith _confirmed AS (\n    SELECT\n      Date,\n      Country,\n      Value AS ConfirmedCases\n    FROM\n      indicators\n    WHERE\n      Indicator = 'ConfirmedCases'\n  ),\n  _tests AS (\n    SELECT\n      Date,\n      Country,\n      Value AS Tests\n    FROM\n      indicators\n    WHERE\n      Indicator = 'Tests'\n  ),\n  _deaths AS (\n    SELECT\n      Date,\n      Country,\n      Value AS Deaths\n    FROM\n      indicators\n    WHERE\n      Indicator = 'Deaths'\n  ),\n  collapsed AS (\n    SELECT\n      _confirmed.Date,\n      _Confirmed.Country,\n      COALESCE(ConfirmedCases, 0) AS ConfirmedCases,\n      COALESCE(Tests, 0) AS Tests,\n      COALESCE(Deaths, 0) AS Deaths\n    FROM\n      _confirmed\n      LEFT JOIN _tests ON (\n        _confirmed.Country = _tests.Country\n        AND _confirmed.Date = _tests.Date\n      )\n      LEFT JOIN _deaths ON (\n        _confirmed.Country = _deaths.Country\n        AND _confirmed.Date = _deaths.Date\n      )\n    WHERE\n      _confirmed.Date = (\n        SELECT\n          MAX(Date)\n        FROM\n          indicators\n      )\n  )\n  SELECT\n    *\n  FROM\n    collapsed\n  --WHERE\n    --Country NOT IN ('UK')\n  ORDER BY\n    ConfirmedCases DESC\n`;\n\nfunction createBaseWithDB(db: string): string {\n  return 'https://covid-19-uk-datasette-65tzkjlxkq-ew.a.run.app/' + db + '.json';\n}\n\nconst baseURL = createBaseWithDB('covid-19-uk') + '?sql=' + encodeURIComponent(query);\n\nfunction mapCountryToEmojiFlag(country: String): String {\n\n  let flag = '🇬🇧';\n  switch (country) {\n    case 'Scotland':\n      flag = '🏴󠁧󠁢󠁳󠁣󠁴󠁿';\n      break;\n    case 'Wales':\n      flag = '🏴󠁧󠁢󠁷󠁬󠁳󠁿';\n      break;\n    case 'England':\n      flag = '🏴󠁧󠁢󠁥󠁮󠁧󠁿';\n      break;\n  }\n\n  return flag ? flag : '🇬🇧';\n}\n\nexport default class TopCountriesTable extends React.Component {\n\n  state = {\n    data: [],\n    loading: true\n  }\n\n  componentDidMount() {\n\n    axios.get(baseURL)\n      .then(response => {\n\n        let _build_data = [];\n        // hyrate array of JSON object with rows based on the columns\n        _.map(response.data.rows, function (r) {\n          _build_data.push(_.mapKeys(r, function (v, k) {\n            return response.data.columns[k];\n          }))\n        });\n\n        this.setState({ data: _build_data });\n        this.setState({ loading: false });\n      })\n  }\n\n  render() {\n\n    if (this.state.loading) {\n      return <LinearProgress />\n    }\n\n    return (\n      <div>\n        <TableContainer component={Paper}>\n          <Table size=\"small\">\n            <TableHead>\n              <TableRow>\n                <TableCell>Country</TableCell>\n                <TableCell>Confirmed Cases</TableCell>\n                <TableCell>Tests</TableCell>\n                <TableCell>Deaths</TableCell>\n                <TableCell>Last Updated</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {this.state.data.map(row => <TableRow key={(row.Date + row.Country)}>\n                <TableCell>{mapCountryToEmojiFlag(row.Country)} {row.Country}</TableCell>\n                <TableCell>{numeral(row.ConfirmedCases).format('0,0')}</TableCell>\n                <TableCell>{numeral(row.Tests).format('0,0')}</TableCell>\n                <TableCell>{numeral(row.Deaths).format('0,0')}</TableCell>\n                <TableCell>{row.Date}</TableCell>\n              </TableRow>)}\n            </TableBody>\n          </Table>\n        </TableContainer>\n\n        <ExpansionPanel>\n          <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n            <Typography>Areas #1</Typography>\n            <Typography>Descripton of Area #1</Typography>\n          </ExpansionPanelSummary>\n          <ExpansionPanelDetails>\n            <AreaExpansionPanelDetail area=\"Area #1\" />\n          </ExpansionPanelDetails>\n        </ExpansionPanel>\n        <ExpansionPanel>\n          <ExpansionPanelSummary>\n            <Typography>Areas #2</Typography>\n          </ExpansionPanelSummary>\n        </ExpansionPanel>\n\n      </div>\n    )\n  }\n\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAiEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AATA;AACA;AAWA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AAFA;AACA;;;;;;AAIA;AAAA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;;;AAEA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;AAzEA;AACA;;;;;A","sourceRoot":""}