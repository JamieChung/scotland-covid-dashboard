{"version":3,"file":"static/webpack/static/development/pages/index.js.bbbf339a0ae28d0ab2b1.hot-update.js","sources":["webpack:///./pages/components/topAreasTable.tsx"],"sourcesContent":["import { ExpansionPanel, ExpansionPanelDetails, ExpansionPanelSummary, LinearProgress, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Typography } from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport axios from 'axios';\nimport * as _ from 'lodash';\nimport numeral from 'numeral';\nimport React from \"react\";\nimport AreaExpansionPanelDetail from './AreaExpansionPanelDetail';\n\nconst query = `\nSELECT\n  Area,\n  AreaCode,\n  CAST(COALESCE(TotalCases, 0) AS Integer) AS TotalCases,\n  Date\nFROM\n  cases\nWHERE\n  Country = 'Scotland'\n  AND Date = (\n    SELECT\n      MAX(Date)\n    FROM\n      cases\n  )\nORDER BY\n  TotalCases DESC\n`;\n\nfunction createBaseWithDB(db: string): string {\n    return 'https://covid-19-uk-datasette-65tzkjlxkq-ew.a.run.app/' + db + '.json';\n}\n\nconst baseURL = createBaseWithDB('covid-19-uk') + '?sql=' + encodeURIComponent(query);\n\nexport default class TopAreasTable extends React.Component {\n\n    state = {\n        data: [],\n        loading: true\n    }\n\n    handleExpansionChange = (panel) => (event, isExpanded) => {\n        console.log(panel, event, isExpanded);\n    };\n\n    componentDidMount() {\n\n        axios.get(baseURL)\n            .then(response => {\n\n                let _build_data = [];\n                // hyrate array of JSON object with rows based on the columns\n                _.map(response.data.rows, function (r) {\n                    _build_data.push(_.mapKeys(r, function (v, k) {\n                        return response.data.columns[k];\n                    }))\n                });\n\n                this.setState({ data: _build_data });\n                this.setState({ loading: false });\n            })\n    }\n\n\n    render() {\n\n        if (this.state.loading) {\n            return <LinearProgress />\n        }\n\n        return (\n            <div>\n                {/* <TableContainer component={Paper}>\n                    <Table size=\"small\">\n                        <TableHead>\n                            <TableRow>\n                                <TableCell>Area</TableCell>\n                                <TableCell>Confirmed Cases</TableCell>\n                                <TableCell>Last Updated</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {this.state.data.map(row => <TableRow key={(row.Date + row.Area)}>\n                                <TableCell>{row.Area}</TableCell>\n                                <TableCell>{numeral(row.TotalCases).format('0,0')}</TableCell>\n                                <TableCell>{row.Date}</TableCell>\n                            </TableRow>)}\n                        </TableBody>\n                    </Table>\n                </TableContainer> */}\n\n                {this.state.data.map(row =>\n                    <ExpansionPanel key={(row.AreaCode)} TransitionProps={{ unmountOnExit: true }} onChange={handleExpansionChange()}>\n                        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                            <Typography style={{ flexBasis: '80%' }}>{row.Area}</Typography>\n                            <Typography style={{ color: '#AAA' }}>Confirmed Cases: {numeral(row.TotalCases).format('0,0')}</Typography>\n                        </ExpansionPanelSummary>\n                        <ExpansionPanelDetails>\n                            <AreaExpansionPanelDetail areaCode={row.AreaCode} area={row.Area} />\n                        </ExpansionPanelDetails>\n                    </ExpansionPanel>\n                )}\n            </div>\n        )\n    }\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AAFA;AACA;AAIA;AAAA;AACA;AACA;AAFA;AACA;;;;;;AAGA;AAAA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;;;AAGA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAoBA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPA;AAaA;;;;AAtEA;AACA;;;;;A","sourceRoot":""}