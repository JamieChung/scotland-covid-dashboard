{"version":3,"file":"static/webpack/static/development/pages/index.js.15edeb9a121263fbf442.hot-update.js","sources":["webpack:///./pages/components/AreaExpansionPanelDetail.tsx"],"sourcesContent":["import { Container, Grid, LinearProgress } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport axios from 'axios';\nimport * as _ from 'lodash';\nimport React from 'react';\nimport { Brush, CartesianGrid, Legend, Line, LineChart, ResponsiveContainer, Tooltip, XAxis, YAxis } from 'recharts';\nimport * as CHART_COLORS from '../../utils/chartcolors';\nimport * as queries from '../../utils/queries';\nimport * as utilities from '../../utils/utilities';\n\nexport default class AreaExpansionPanelDetail extends React.Component<{ area?: string, areaCode?: string }> {\n\n    state = {\n        ready: false,\n        data_total_cases: []\n    }\n\n    constructor(props) {\n\n        super(props);\n        this.state = {\n            ready: false,\n            data_total_cases: []\n        }\n    }\n\n    componentDidMount() {\n        axios\n            .all([\n                utilities.createbaseURLWithQuery(queries.QUERY_TOTAL_CASES_BY_AREA), 'https://github.com/watty62/Scot_covid19/blob/master/data/processed/regional_hospitalisations.csv'])\n            .then(response => {\n                let _build_data = [];\n                // hyrate array of JSON object with rows based on the columns\n                _.map(response.data.rows, function (r) {\n                    _build_data.push(_.mapKeys(r, function (v, k) {\n                        return response.data.columns[k];\n                    }))\n                });\n\n                this.setState({ data_total_cases: _build_data, ready: true });\n            })\n    }\n\n    render() {\n        return this.state.ready ?\n            <Container>\n                <Grid>\n                    <Typography variant=\"h5\">Population: 122,124</Typography>\n                    <ResponsiveContainer width='100%' height={500}>\n                        <LineChart data={this.state.data_total_cases}>\n                            <Line type=\"monotone\" fill={CHART_COLORS.COLOR_PBI_DEFAULT[0]} dataKey=\"TotalCases\" name=\"Total Cases\" />\n                            <Legend />\n                            <Tooltip />\n                            <CartesianGrid strokeDasharray=\"5 5\" />\n                            <Brush dataKey=\"Date\" height={30} stroke=\"#8884d8\" />\n                            <YAxis />\n                            <XAxis\n                                dataKey=\"Date\"\n                            // allowDuplicatedCategory={false}\n                            // tickFormatter={utilities.formatDateLabel}\n                            />\n                        </LineChart>\n                    </ResponsiveContainer>\n                </Grid>\n            </Container> : <LinearProgress />\n    }\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAOA;AAAA;AACA;AADA;AACA;AACA;AACA;AAHA;AAJA;AACA;AAFA;AACA;AAOA;AACA;AACA;AAFA;AAHA;AAOA;AACA;;;AACA;AAAA;AACA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;AAvDA;AACA;;;;;A","sourceRoot":""}