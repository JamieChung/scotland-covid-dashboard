{"version":3,"file":"static/webpack/static/development/pages/index.js.c1195ceaaf10c8da55f6.hot-update.js","sources":["webpack:///./pages/components/app.tsx","webpack:///./pages/components/topAreasTable.tsx"],"sourcesContent":["import { ExpansionPanel, ExpansionPanelDetails, ExpansionPanelSummary, Grid, makeStyles } from '@material-ui/core';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport React from 'react';\nimport * as queries from '../../utils/queries';\nimport AreasCharts from '../components/areasCharts';\nimport CountryCharts from '../components/countryCharts';\nimport SingleKPICard from '../components/singleKPICard';\nimport TopAreasTable from '../components/topAreasTable';\nimport TopCountriesTable from '../components/topCountriesTable';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ICUTrendCard from './ICUTrendCard';\nimport StaffAbsencesCard from './StaffAbsencesCard';\nimport AreaExpansionPanelDetail from './AreaExpansionPanelDetail';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    heading: {\n        fontSize: theme.typography.pxToRem(15),\n        flexBasis: '33.33%',\n        flexShrink: 0,\n    },\n    secondaryHeading: {\n        fontSize: theme.typography.pxToRem(15),\n        color: theme.palette.text.secondary,\n    },\n}));\n\nexport function areaExpansions() {\n\n    const classes = {\n        heading: {\n            flexBasis: '33.33%',\n            flexShrink: 0\n        }\n    };\n\n    return (\n        <div>\n            <ExpansionPanel>\n                <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                    <Typography>Areas #1</Typography>\n                    <Typography>Descripton of Area #1</Typography>\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails>\n                    <AreaExpansionPanelDetail area=\"Area #1\" />\n                </ExpansionPanelDetails>\n            </ExpansionPanel>\n            <ExpansionPanel>\n                <ExpansionPanelSummary>\n                    <Typography>Areas #2</Typography>\n                </ExpansionPanelSummary>\n            </ExpansionPanel>\n        </div>\n    )\n}\n\nexport default class App extends React.Component {\n\n    render() {\n        return (\n            <Container>\n                <Typography variant=\"h4\">Scotland COVID-19 Dashboard</Typography>\n                <Typography variant=\"overline\" style={{ marginBottom: 25, display: 'block' }}>Updated Daily - BST/GMT</Typography>\n                <Grid container spacing={3}>\n                    <Grid item xs={12}>\n                        <Typography variant=\"h5\">Scotland Overview</Typography>\n                    </Grid>\n                    <Grid item xs={12} md={6}>\n                        <SingleKPICard title=\"Total number of confirmed cases in Scotland\" query={queries.QUERY_TOTAL_CONFIRMED_CASES_SCOTLAND} />\n                    </Grid>\n                    <Grid item xs={12} md={6}>\n                        <SingleKPICard title=\"Latest daily number of confirmed cases in Scotland\" query={queries.QUERY_DAILY_CHANGE_CONFIRMED_CASES_SCOTLAND} />\n                    </Grid>\n                    <Grid item xs={12} md={6}>\n                        <SingleKPICard title=\"Total number of tests in Scotland\" query={queries.QUERY_TOTAL_TESTS_SCOTLAND} />\n                    </Grid>\n                    <Grid item xs={12} md={6}>\n                        <SingleKPICard title=\"Latest daily number of tests in Scotland\" query={queries.QUERY_DAILY_CHANGE_TESTS_SCOTLAND} />\n                    </Grid>\n                    <Grid item xs={12} md={6}>\n                        <SingleKPICard title=\"Total number of deaths in Scotland\" query={queries.QUERY_TOTAL_DEATHS_SCOTLAND} />\n                    </Grid>\n                    <Grid item xs={12} md={6}>\n                        <SingleKPICard title=\"Latest daily number of deaths in Scotland\" query={queries.QUERY_DAILY_CHANGE_DEATHS_SCOTLAND} />\n                    </Grid>\n                    {/* <Grid item xs={12}>\n                        {areaExpansions()}\n                    </Grid> */}\n                    <Grid item xs={12}>\n                        <CountryCharts />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <ICUTrendCard title=\"ICU\" query=\"2141\" />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <StaffAbsencesCard title=\"Staff Absences\" query=\"2141\" />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Typography variant=\"h5\">Scotland Regions</Typography>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <TopAreasTable />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Typography variant=\"h5\">United Kingdom Overview</Typography>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <TopCountriesTable />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <AreasCharts />\n                    </Grid>\n                </Grid>\n            </Container>\n        );\n    }\n}","import { ExpansionPanel, ExpansionPanelDetails, ExpansionPanelSummary, LinearProgress, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Typography } from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport axios from 'axios';\nimport * as _ from 'lodash';\nimport numeral from 'numeral';\nimport React from \"react\";\nimport AreaExpansionPanelDetail from './AreaExpansionPanelDetail';\n\nconst query = `\nSELECT\n  Area,\n  AreaCode,\n  CAST(COALESCE(TotalCases, 0) AS Integer) AS TotalCases,\n  Date\nFROM\n  cases\nWHERE\n  Country = 'Scotland'\n  AND Date = (\n    SELECT\n      MAX(Date)\n    FROM\n      cases\n  )\nORDER BY\n  TotalCases DESC\n`;\n\nfunction createBaseWithDB(db: string): string {\n    return 'https://covid-19-uk-datasette-65tzkjlxkq-ew.a.run.app/' + db + '.json';\n}\n\nconst baseURL = createBaseWithDB('covid-19-uk') + '?sql=' + encodeURIComponent(query);\n\nexport default class TopAreasTable extends React.Component {\n\n    state = {\n        data: [],\n        loading: true\n    }\n\n    componentDidMount() {\n\n        axios.get(baseURL)\n            .then(response => {\n\n                let _build_data = [];\n                // hyrate array of JSON object with rows based on the columns\n                _.map(response.data.rows, function (r) {\n                    _build_data.push(_.mapKeys(r, function (v, k) {\n                        return response.data.columns[k];\n                    }))\n                });\n\n                this.setState({ data: _build_data });\n                this.setState({ loading: false });\n            })\n    }\n\n\n    render() {\n\n        if (this.state.loading) {\n            return <LinearProgress />\n        }\n\n        return (\n            <div>\n                {/* <TableContainer component={Paper}>\n                    <Table size=\"small\">\n                        <TableHead>\n                            <TableRow>\n                                <TableCell>Area</TableCell>\n                                <TableCell>Confirmed Cases</TableCell>\n                                <TableCell>Last Updated</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {this.state.data.map(row => <TableRow key={(row.Date + row.Area)}>\n                                <TableCell>{row.Area}</TableCell>\n                                <TableCell>{numeral(row.TotalCases).format('0,0')}</TableCell>\n                                <TableCell>{row.Date}</TableCell>\n                            </TableRow>)}\n                        </TableBody>\n                    </Table>\n                </TableContainer> */}\n\n                {this.state.data.map(row =>\n                    <ExpansionPanel key={(row.AreaCode)} TransitionProps={{ unmountOnExit: true }}>\n                        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                            <Typography style={{ flexBasis: '80%' }}>{row.Area}</Typography>\n                            <Typography style={{ color: '#AAA' }}>Confirmed Cases: {numeral(row.TotalCases).format('0,0')}</Typography>\n                        </ExpansionPanelSummary>\n                        <ExpansionPanelDetails>\n                            <AreaExpansionPanelDetail areaCode={row.AreaCode} area={row.Area} />\n                        </ExpansionPanelDetails>\n                    </ExpansionPanel>\n                )}\n            </div>\n        )\n    }\n}"],"mappings":"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","sourceRoot":""}