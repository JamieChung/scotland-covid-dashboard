{"version":3,"file":"static/webpack/static/development/pages/index.js.09c27f680ce928fb7763.hot-update.js","sources":["webpack:///./pages/components/ICUTrendCard.tsx"],"sourcesContent":["import React from \"react\";\nimport { Card, CardHeader, LinearProgress, CardContent, Typography } from \"@material-ui/core\"\nimport axios from 'axios';\nimport numeral from 'numeral';\nimport * as utilities from '../../utils/utilities';\nimport * as _ from 'lodash';\nimport csvtojson from 'csvtojson';\nimport { ResponsiveContainer, Brush, LineChart, Line, Legend, XAxis, YAxis, Tooltip, CartesianGrid } from 'recharts';\nimport * as CHART_COLORS from '../../utils/chartcolors';\n\nexport default class ICUTrendCard extends React.Component<{ title: string, query: any }> {\n\n    state = {\n        value: 0,\n        ready: false\n    }\n\n    componentDidMount() {\n        // axios.get(utilities.createbaseURLWithQuery(this.props.query))\n        axios.get('https://raw.githubusercontent.com/watty62/Scot_covid19/master/data/processed/intensive_care.csv')\n            .then(response => {\n                csvtojson()\n                    .fromString(response.data)\n                    .then((json) => {\n                        console.log(json);\n                        this.setState({ value: json, ready: true });\n                })\n            })\n    }\n\n    render() {\n        return (\n            <Card>\n                <CardHeader subheader={this.props.title} />\n                {this.state.ready ?\n                    <CardContent>\n                        <ResponsiveContainer width='100%' height={500}>\n                            <LineChart data={this.state.value}>\n                                <Line type=\"monotone\" fill={CHART_COLORS.COLOR_PBI_DEFAULT[0]} dataKey=\"icu_patients\" name=\"ICU Patients\" />\n                                <Legend />\n                                <Tooltip />\n                                <CartesianGrid strokeDasharray=\"5 5\" />\n                                <YAxis />\n                                <XAxis\n                                    dataKey=\"date\"\n                                    // allowDuplicatedCategory={false}\n                                    // tickFormatter={utilities.formatDateLabel}\n                                    />\n                            </LineChart>\n                        </ResponsiveContainer>\n                    </CardContent> :\n                    <LinearProgress />}\n            </Card>\n        )\n    }\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AAFA;AACA;;;;;;AAIA;AAAA;AACA;AAAA;AACA;AAEA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AA5CA;AACA;;;;;A","sourceRoot":""}