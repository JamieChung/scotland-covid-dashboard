{"version":3,"file":"static/webpack/static/development/pages/index.js.c7b4581a819b72c8644d.hot-update.js","sources":["webpack:///./pages/components/areasCharts.tsx"],"sourcesContent":["import React from \"react\";\nimport { TableContainer, Paper, Table, TableHead, TableRow, TableCell, TableBody, LinearProgress } from \"@material-ui/core\";\nimport axios from 'axios';\nimport * as _ from 'lodash';\nimport numeral from 'numeral';\nimport { ResponsiveContainer, Brush, LineChart, Line, Legend, XAxis, YAxis, Tooltip, CartesianGrid } from 'recharts';\nimport moment from 'moment';\nimport seedColor from 'seed-color';\n\nconst query = `\nSELECT\n  Area,\n  AreaCode,\n  CAST(COALESCE(TotalCases, 0) AS Integer) AS TotalCases,\n  Date\nFROM\n  cases\nWHERE\n  Country = 'Scotland'\nORDER BY\n  Date ASC`;\n\nfunction createBaseWithDB(db: string): string {\n    return 'https://covid-19-uk-datasette-65tzkjlxkq-ew.a.run.app/' + db + '.json';\n}\n\nconst baseURL = createBaseWithDB('covid-19-uk') + '?sql=' + encodeURIComponent(query);\n\n\nfunction formatDateLabel(label: string): string {\n    // return new Date(label).getMonth () + '-' + new Date(label).getDay();\n    return moment(label).format('MMM-DD');\n}\n\n\n\nexport default class AreasCharts extends React.Component {\n\n    state = {\n        data: [],\n        loading: true\n    }\n\n    componentDidMount() {\n\n        axios.get(baseURL)\n            .then(response => {\n\n                let _build_data = [];\n                // hyrate array of JSON object with rows based on the columns\n                _.map(response.data.rows, function (r) {\n                    _build_data.push(_.mapKeys(r, function (v, k) {\n                        return response.data.columns[k];\n                    }))\n                });\n\n                this.setState({\n                    data: _.groupBy(_build_data, 'Area'),\n                    loading: false\n                });\n            })\n    }\n\n    render() {\n\n        if (this.state.loading) {\n            return <LinearProgress />\n        }\n\n        return (\n            <Card>\n                <CardHeader subheader={this.props.title} />\n                {this.state.ready ?\n                    <CardContent>\n                        <ResponsiveContainer width='100%' height={500}>\n                            <LineChart>\n                                {_.map(this.state.data, function (data, k) {\n                                    return <Line key={k} dataKey=\"TotalCases\" name={k} data={data} stroke={seedColor(k).toHex()} />\n                                })}\n                                <Legend />\n                                <Tooltip />\n                                <CartesianGrid strokeDasharray=\"5 5\" />\n                                <YAxis />\n                                <Brush dataKey=\"Date\" height={30} stroke=\"#8884d8\" />\n                                <XAxis\n                                    dataKey=\"Date\"\n                                    allowDuplicatedCategory={false}\n                                    tickFormatter={formatDateLabel}\n                                    />\n                            </LineChart>\n                        </ResponsiveContainer>\n                    </CardContent> :\n                    <LinearProgress />}\n            </Card>\n        )\n    }\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAYA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AAFA;AACA;;;;;;AAIA;AAAA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;;;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AA3DA;AACA;;;;;A","sourceRoot":""}